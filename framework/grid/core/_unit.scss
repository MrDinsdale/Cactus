[class *= "cactus__unit"] {
  display: inline-block;
  font-size: $cactus-base-font-size;
  padding-left: #{$cactus-usable-gutter}px;
  padding-right: #{$cactus-usable-gutter}px;
  vertical-align: top;
}

@function calculate-unit-width($numerator, $denominator) {
  @return (100% / $denominator) * $numerator;
}

@each $cactus-grid-breakpoint in $cactus-grid-generator {
  $cactus-grid-breakpoint-name: nth($cactus-grid-breakpoint, 1);
  $cactus-grid-breakpoint-unit-ratios: nth($cactus-grid-breakpoint, 3);

  @if $cactus-grid-breakpoint-name {
    $cactus-grid-breakpoint-width: strip-unit(nth($cactus-grid-breakpoint, 2)) / strip-unit($cactus-base-font-size);

    @media (max-width: #{$cactus-grid-breakpoint-width}em) {
      @each $cactus-grid-unit in $cactus-grid-breakpoint-unit-ratios {
        $value-1: nth($cactus-grid-unit, 1);
        $value-2: nth($cactus-grid-unit, 2);
        $cactus-grid-unit-width: calculate-unit-width($value-1, $value-2);

        @if $value-2 == $value-1 {
          .cactus__unit--#{$cactus-grid-breakpoint-name}-1 {
            width: $cactus-grid-unit-width;
          }
        }

        @else {
          .cactus__unit--#{$cactus-grid-breakpoint-name}-#{$value-1}-#{$value-2} {
            width: $cactus-grid-unit-width;
          }
        }
      }
    }
  }

  @else {
    @each $cactus-grid-unit in $cactus-grid-breakpoint-unit-ratios {
      $value-1: nth($cactus-grid-unit, 1);
      $value-2: nth($cactus-grid-unit, 2);
      $cactus-grid-unit-width: calculate-unit-width($value-1, $value-2);

      @if $value-2 == $value-1 {
        .cactus__unit--1 {
          width: $cactus-grid-unit-width;
        }
      }

      @else {
        .cactus__unit--#{$value-1}-#{$value-2} {
          width: $cactus-grid-unit-width;
        }
      }
    }
  }
};
